#version: '3.8'
#
#services:
#  postgres:
#    image: postgres:14.7-alpine
#    environment:
#      POSTGRES_USER: internship_user
#      POSTGRES_PASSWORD: internship_user
#      POSTGRES_DB: internship
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready", "-d", "books_db" ]
#      interval: 10s
#      timeout: 3s
#      retries: 3
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres-data:/var/lib/postgresql/data
#
#  app:
#    build: .
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgres
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/internship
#      SPRING_DATASOURCE_USERNAME: internship_user
#      SPRING_DATASOURCE_PASSWORD: internship_user
#
#volumes:
#  postgres-data:
#version: '3.8'
#services:
#  client-backend:
#    image: client:0.0.1
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    depends_on:
#      service-db:
#        condition: service_healthy
#    environment:
#      - SERVER_PORT= 8080
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://service-db/internship
#
#  service-db:
#    image: postgres:14.7-alpine
#    environment:
#      POSTGRES_USER: internship_user
#      POSTGRES_PASSWORD: internship_user
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready", "--quiet" ]
#      interval: 3s
#      timeout: 5s
#      retries: 10
#    ports:
#      - "15432:5432"
#    volumes:
#      - ./infrastructure/db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
#      - db-data:/var/lib/postgresql/data
#    restart: unless-stopped
#
#  pgadmin:
#    container_name: pgadmin4_container
#    image: dpage/pgadmin4:7
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: kQU8TDkzkUjHy75r0
#    ports:
#      - "5050:80"
#    volumes:
#      - pgadmin-data:/var/lib/pgadmin
#
#volumes:
#  db-data:
#  pgadmin-data:

version: "3.2"

services:
  internship-db:
    container_name: internship_db
    image: postgres
    environment:
      POSTGRES_DB: internship_db
      POSTGRES_USER: internship_user
      POSTGRES_PASSWORD: internship_user
    ports:
      - "5434:5432"
    volumes:
      - postgres:/data/postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U internship_user" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  internship-service:
    container_name: internship-service
    build:
      context: .
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://internship_db:5432/internship_db
    ports:
      - "8080:8080"
    depends_on:
      internship-db:
        condition: service_healthy
volumes:
  postgres: